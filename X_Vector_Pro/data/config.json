# X_Vector_Pro/data/config.py

import json
import os

class Config:
    def __init__(self, config_path):
        self._config_data = self._load_config(config_path)

    def _load_config(self, path):
        """Load the config.json file."""
        if not os.path.exists(path):
            raise FileNotFoundError(f"Config file not found: {path}")
        with open(path, 'r') as f:
            return json.load(f)

    def __getattr__(self, name):
        """Allow access like config.stealth_mode instead of config['stealth_mode']."""
        try:
            return self._config_data[name]
        except KeyError:
            raise AttributeError(f"Config has no attribute '{name}'")

# Set up the config object
DATA_DIR = os.path.dirname(__file__)
CONFIG_PATH = os.path.join(DATA_DIR, 'config.json')
config = Config(CONFIG_PATH)
{
  "stealth_mode": true,
  "smtp_server": "smtp.example.com",
  "smtp_port": 587,
  "smtp_user": "user@example.com",
  "smtp_pass": "password123",
  "proxy_list": [
    "http://127.0.0.1:8080",
    "http://127.0.0.1:3128"
  ],
  "use_tor": false,
  "random_delay_min": 0.5,
  "random_delay_max": 3.0,
  
  "use_proxy": false,
  "delay_seconds": 0.5,
  "random_user_agent": true,
  "default_wordlist": "wordlists/rockyou.txt",
  "concurrency": 10,
  "retry_delay": 1.5
}
