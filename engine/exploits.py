import importlib.utils
import os

class ExploitRunner:
    def __init__(self, url, exploit_names, logger):
        self.url = url
        self.exploits = exploit_names
        self.log = logger

    def run(self, findings):
        for exploit in self.exploits:
            self.log(f"[*] Launching exploit: {exploit}")
            try:
                path = os.path.join("exploits", f"{exploit}.py")
                spec = importlib.util.spec_from_file_location(exploit, path)
                mod = importlib.util.module_from_spec(spec)
                spec.loader.exec_module(mod)
                result = mod.run(self.url)
                findings["exploits"].append({"exploit": exploit, "result": result})
                self.log(f"    [+] Result: {result}")
            except Exception as e:
                findings["exploits"].append({"exploit": exploit, "result": str(e)})
                self.log(f"    [!] Exploit failed: {e}")
