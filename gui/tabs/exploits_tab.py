import customtkinter as ctk
import os
import importlib.util
from tkinter import messagebox

EXPLOIT_DIR = "exploits"

def load_exploit_modules():
    modules = []
    if not os.path.exists(EXPLOIT_DIR):
        return []

    for file in os.listdir(EXPLOIT_DIR):
        if file.endswith(".py") and not file.startswith("__"):
            path = os.path.join(EXPLOIT_DIR, file)
            spec = importlib.util.spec_from_file_location(file[:-3], path)
            module = importlib.util.module_from_spec(spec)
            try:
                spec.loader.exec_module(module)
                if hasattr(module, "run"):
                    modules.append((file[:-3], module))
            except Exception as e:
                print(f"Error loading {file}: {e}")
    return modules

def build_tab(parent):
    frame = ctk.CTkFrame(parent)
    ctk.CTkLabel(frame, text="Exploits Launcher", font=("Arial", 18)).pack(pady=10)

    exploit_var = ctk.StringVar()
    output_box = ctk.CTkTextbox(frame, height=300, wrap="word")
    output_box.pack(pady=10, fill="both", expand=True)

    # Dropdown
    modules = load_exploit_modules()
    options = [m[0] for m in modules]
    if options:
        exploit_var.set(options[0])

    dropdown = ctk.CTkOptionMenu(frame, values=options, variable=exploit_var)
    dropdown.pack(pady=5)

    def run_selected_exploit():
        selected_name = exploit_var.get()
        for name, mod in modules:
            if name == selected_name:
                try:
                    output_box.insert("end", f"\n[*] Running: {name}\n")
                    result = mod.run()
                    output_box.insert("end", f"{result}\n")
                except Exception as e:
                    output_box.insert("end", f"[!] Error: {e}\n")
                return
        messagebox.showerror("Error", "Exploit module not found.")

    run_button = ctk.CTkButton(frame, text="Run Exploit", command=run_selected_exploit)
    run_button.pack(pady=10)

    return frame
